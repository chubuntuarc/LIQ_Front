'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("SOLICITUD_DE_SERVICIO_BANCA"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class SOLICITUD_DE_SERVICIO_BANCA
    Inherits Global.System.Data.DataSet
    
    Private tablePG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESAS As PG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESASDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("PG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESAS")) Is Nothing) Then
                MyBase.Tables.Add(New PG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESASDataTable(ds.Tables("PG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESAS")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property PG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESAS() As PG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESASDataTable
        Get
            Return Me.tablePG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESAS
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As SOLICITUD_DE_SERVICIO_BANCA = CType(MyBase.Clone,SOLICITUD_DE_SERVICIO_BANCA)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("PG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESAS")) Is Nothing) Then
                MyBase.Tables.Add(New PG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESASDataTable(ds.Tables("PG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESAS")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tablePG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESAS = CType(MyBase.Tables("PG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESAS"),PG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESASDataTable)
        If (initTable = true) Then
            If (Not (Me.tablePG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESAS) Is Nothing) Then
                Me.tablePG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESAS.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "SOLICITUD_DE_SERVICIO_BANCA"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/SOLICITUD_DE_SERVICIO_BANCA.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tablePG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESAS = New PG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESASDataTable()
        MyBase.Tables.Add(Me.tablePG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESAS)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializePG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESAS() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As SOLICITUD_DE_SERVICIO_BANCA = New SOLICITUD_DE_SERVICIO_BANCA()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub PG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESASRowChangeEventHandler(ByVal sender As Object, ByVal e As PG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESASRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class PG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESASDataTable
        Inherits Global.System.Data.TypedTableBase(Of PG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESASRow)
        
        Private columnIMPORTE As Global.System.Data.DataColumn
        
        Private columnIMPORTE_CON_LETRA As Global.System.Data.DataColumn
        
        Private columnBANCO_TABLA_AMORTIZACION As Global.System.Data.DataColumn
        
        Private columnNOMBRE_ORDENANTE As Global.System.Data.DataColumn
        
        Private columnCUENTA_CARGO As Global.System.Data.DataColumn
        
        Private columnRFC As Global.System.Data.DataColumn
        
        Private columnNOMBRE_BENEFICIARIO As Global.System.Data.DataColumn
        
        Private columnCUENTA_BENEFICIARIO As Global.System.Data.DataColumn
        
        Private columnBANCO_BENEFICIARIO As Global.System.Data.DataColumn
        
        Private columnDIRECCION_BANCO As Global.System.Data.DataColumn
        
        Private columnCIUDAD As Global.System.Data.DataColumn
        
        Private columnESTADO As Global.System.Data.DataColumn
        
        Private columnPAIS As Global.System.Data.DataColumn
        
        Private columnNOTA_AUTORIZACION As Global.System.Data.DataColumn
        
        Private columnAUTORIZACION_IZQUIERDA As Global.System.Data.DataColumn
        
        Private columnAUTORIZADOR_DERECHA As Global.System.Data.DataColumn
        
        Private columnEJECUTIVO_CUENTA As Global.System.Data.DataColumn
        
        Private columnBANCO_TABLA_AMORTIZACION1 As Global.System.Data.DataColumn
        
        Private columnFECHA As Global.System.Data.DataColumn
        
        Private columnMONEDA As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "PG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESAS"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IMPORTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIMPORTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IMPORTE_CON_LETRAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIMPORTE_CON_LETRA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BANCO_TABLA_AMORTIZACIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBANCO_TABLA_AMORTIZACION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property NOMBRE_ORDENANTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOMBRE_ORDENANTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CUENTA_CARGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUENTA_CARGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RFCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRFC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property NOMBRE_BENEFICIARIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOMBRE_BENEFICIARIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CUENTA_BENEFICIARIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUENTA_BENEFICIARIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BANCO_BENEFICIARIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBANCO_BENEFICIARIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DIRECCION_BANCOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDIRECCION_BANCO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CIUDADColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCIUDAD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ESTADOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESTADO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PAISColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPAIS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property NOTA_AUTORIZACIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOTA_AUTORIZACION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property AUTORIZACION_IZQUIERDAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUTORIZACION_IZQUIERDA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property AUTORIZADOR_DERECHAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUTORIZADOR_DERECHA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property EJECUTIVO_CUENTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEJECUTIVO_CUENTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BANCO_TABLA_AMORTIZACION1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBANCO_TABLA_AMORTIZACION1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property FECHAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MONEDAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMONEDA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As PG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESASRow
            Get
                Return CType(Me.Rows(index),PG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESASRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event PG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESASRowChanging As PG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESASRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event PG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESASRowChanged As PG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESASRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event PG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESASRowDeleting As PG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESASRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event PG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESASRowDeleted As PG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESASRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddPG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESASRow(ByVal row As PG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESASRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddPG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESASRow( _
                    ByVal IMPORTE As Decimal,  _
                    ByVal IMPORTE_CON_LETRA As String,  _
                    ByVal BANCO_TABLA_AMORTIZACION As String,  _
                    ByVal NOMBRE_ORDENANTE As String,  _
                    ByVal CUENTA_CARGO As String,  _
                    ByVal RFC As String,  _
                    ByVal NOMBRE_BENEFICIARIO As String,  _
                    ByVal CUENTA_BENEFICIARIO As String,  _
                    ByVal BANCO_BENEFICIARIO As String,  _
                    ByVal DIRECCION_BANCO As String,  _
                    ByVal CIUDAD As String,  _
                    ByVal ESTADO As String,  _
                    ByVal PAIS As String,  _
                    ByVal NOTA_AUTORIZACION As String,  _
                    ByVal AUTORIZACION_IZQUIERDA As String,  _
                    ByVal AUTORIZADOR_DERECHA As String,  _
                    ByVal EJECUTIVO_CUENTA As String,  _
                    ByVal BANCO_TABLA_AMORTIZACION1 As String,  _
                    ByVal FECHA As Date,  _
                    ByVal MONEDA As String) As PG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESASRow
            Dim rowPG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESASRow As PG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESASRow = CType(Me.NewRow,PG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESASRow)
            Dim columnValuesArray() As Object = New Object() {IMPORTE, IMPORTE_CON_LETRA, BANCO_TABLA_AMORTIZACION, NOMBRE_ORDENANTE, CUENTA_CARGO, RFC, NOMBRE_BENEFICIARIO, CUENTA_BENEFICIARIO, BANCO_BENEFICIARIO, DIRECCION_BANCO, CIUDAD, ESTADO, PAIS, NOTA_AUTORIZACION, AUTORIZACION_IZQUIERDA, AUTORIZADOR_DERECHA, EJECUTIVO_CUENTA, BANCO_TABLA_AMORTIZACION1, FECHA, MONEDA}
            rowPG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESASRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowPG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESASRow)
            Return rowPG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESASRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As PG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESASDataTable = CType(MyBase.Clone,PG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESASDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New PG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESASDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnIMPORTE = MyBase.Columns("IMPORTE")
            Me.columnIMPORTE_CON_LETRA = MyBase.Columns("IMPORTE_CON_LETRA")
            Me.columnBANCO_TABLA_AMORTIZACION = MyBase.Columns("BANCO_TABLA_AMORTIZACION")
            Me.columnNOMBRE_ORDENANTE = MyBase.Columns("NOMBRE_ORDENANTE")
            Me.columnCUENTA_CARGO = MyBase.Columns("CUENTA_CARGO")
            Me.columnRFC = MyBase.Columns("RFC")
            Me.columnNOMBRE_BENEFICIARIO = MyBase.Columns("NOMBRE_BENEFICIARIO")
            Me.columnCUENTA_BENEFICIARIO = MyBase.Columns("CUENTA_BENEFICIARIO")
            Me.columnBANCO_BENEFICIARIO = MyBase.Columns("BANCO_BENEFICIARIO")
            Me.columnDIRECCION_BANCO = MyBase.Columns("DIRECCION_BANCO")
            Me.columnCIUDAD = MyBase.Columns("CIUDAD")
            Me.columnESTADO = MyBase.Columns("ESTADO")
            Me.columnPAIS = MyBase.Columns("PAIS")
            Me.columnNOTA_AUTORIZACION = MyBase.Columns("NOTA_AUTORIZACION")
            Me.columnAUTORIZACION_IZQUIERDA = MyBase.Columns("AUTORIZACION_IZQUIERDA")
            Me.columnAUTORIZADOR_DERECHA = MyBase.Columns("AUTORIZADOR_DERECHA")
            Me.columnEJECUTIVO_CUENTA = MyBase.Columns("EJECUTIVO_CUENTA")
            Me.columnBANCO_TABLA_AMORTIZACION1 = MyBase.Columns("BANCO_TABLA_AMORTIZACION1")
            Me.columnFECHA = MyBase.Columns("FECHA")
            Me.columnMONEDA = MyBase.Columns("MONEDA")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnIMPORTE = New Global.System.Data.DataColumn("IMPORTE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIMPORTE)
            Me.columnIMPORTE_CON_LETRA = New Global.System.Data.DataColumn("IMPORTE_CON_LETRA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIMPORTE_CON_LETRA)
            Me.columnBANCO_TABLA_AMORTIZACION = New Global.System.Data.DataColumn("BANCO_TABLA_AMORTIZACION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBANCO_TABLA_AMORTIZACION)
            Me.columnNOMBRE_ORDENANTE = New Global.System.Data.DataColumn("NOMBRE_ORDENANTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOMBRE_ORDENANTE)
            Me.columnCUENTA_CARGO = New Global.System.Data.DataColumn("CUENTA_CARGO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUENTA_CARGO)
            Me.columnRFC = New Global.System.Data.DataColumn("RFC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRFC)
            Me.columnNOMBRE_BENEFICIARIO = New Global.System.Data.DataColumn("NOMBRE_BENEFICIARIO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOMBRE_BENEFICIARIO)
            Me.columnCUENTA_BENEFICIARIO = New Global.System.Data.DataColumn("CUENTA_BENEFICIARIO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUENTA_BENEFICIARIO)
            Me.columnBANCO_BENEFICIARIO = New Global.System.Data.DataColumn("BANCO_BENEFICIARIO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBANCO_BENEFICIARIO)
            Me.columnDIRECCION_BANCO = New Global.System.Data.DataColumn("DIRECCION_BANCO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDIRECCION_BANCO)
            Me.columnCIUDAD = New Global.System.Data.DataColumn("CIUDAD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCIUDAD)
            Me.columnESTADO = New Global.System.Data.DataColumn("ESTADO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESTADO)
            Me.columnPAIS = New Global.System.Data.DataColumn("PAIS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPAIS)
            Me.columnNOTA_AUTORIZACION = New Global.System.Data.DataColumn("NOTA_AUTORIZACION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOTA_AUTORIZACION)
            Me.columnAUTORIZACION_IZQUIERDA = New Global.System.Data.DataColumn("AUTORIZACION_IZQUIERDA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUTORIZACION_IZQUIERDA)
            Me.columnAUTORIZADOR_DERECHA = New Global.System.Data.DataColumn("AUTORIZADOR_DERECHA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUTORIZADOR_DERECHA)
            Me.columnEJECUTIVO_CUENTA = New Global.System.Data.DataColumn("EJECUTIVO_CUENTA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEJECUTIVO_CUENTA)
            Me.columnBANCO_TABLA_AMORTIZACION1 = New Global.System.Data.DataColumn("BANCO_TABLA_AMORTIZACION1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBANCO_TABLA_AMORTIZACION1)
            Me.columnFECHA = New Global.System.Data.DataColumn("FECHA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA)
            Me.columnMONEDA = New Global.System.Data.DataColumn("MONEDA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMONEDA)
            Me.columnIMPORTE.ReadOnly = true
            Me.columnIMPORTE_CON_LETRA.ReadOnly = true
            Me.columnIMPORTE_CON_LETRA.MaxLength = 400
            Me.columnBANCO_TABLA_AMORTIZACION.ReadOnly = true
            Me.columnBANCO_TABLA_AMORTIZACION.MaxLength = 300
            Me.columnNOMBRE_ORDENANTE.ReadOnly = true
            Me.columnNOMBRE_ORDENANTE.MaxLength = 300
            Me.columnCUENTA_CARGO.ReadOnly = true
            Me.columnCUENTA_CARGO.MaxLength = 20
            Me.columnRFC.ReadOnly = true
            Me.columnRFC.MaxLength = 20
            Me.columnNOMBRE_BENEFICIARIO.ReadOnly = true
            Me.columnNOMBRE_BENEFICIARIO.MaxLength = 300
            Me.columnCUENTA_BENEFICIARIO.ReadOnly = true
            Me.columnCUENTA_BENEFICIARIO.MaxLength = 300
            Me.columnBANCO_BENEFICIARIO.ReadOnly = true
            Me.columnBANCO_BENEFICIARIO.MaxLength = 20
            Me.columnDIRECCION_BANCO.ReadOnly = true
            Me.columnDIRECCION_BANCO.MaxLength = 20
            Me.columnCIUDAD.ReadOnly = true
            Me.columnCIUDAD.MaxLength = 300
            Me.columnESTADO.ReadOnly = true
            Me.columnESTADO.MaxLength = 20
            Me.columnPAIS.ReadOnly = true
            Me.columnPAIS.MaxLength = 20
            Me.columnNOTA_AUTORIZACION.ReadOnly = true
            Me.columnNOTA_AUTORIZACION.MaxLength = 1000
            Me.columnAUTORIZACION_IZQUIERDA.ReadOnly = true
            Me.columnAUTORIZACION_IZQUIERDA.MaxLength = 300
            Me.columnAUTORIZADOR_DERECHA.ReadOnly = true
            Me.columnAUTORIZADOR_DERECHA.MaxLength = 300
            Me.columnEJECUTIVO_CUENTA.ReadOnly = true
            Me.columnEJECUTIVO_CUENTA.MaxLength = 300
            Me.columnBANCO_TABLA_AMORTIZACION1.ReadOnly = true
            Me.columnBANCO_TABLA_AMORTIZACION1.MaxLength = 300
            Me.columnFECHA.ReadOnly = true
            Me.columnMONEDA.ReadOnly = true
            Me.columnMONEDA.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewPG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESASRow() As PG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESASRow
            Return CType(Me.NewRow,PG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESASRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New PG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESASRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(PG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESASRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.PG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESASRowChangedEvent) Is Nothing) Then
                RaiseEvent PG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESASRowChanged(Me, New PG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESASRowChangeEvent(CType(e.Row,PG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESASRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.PG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESASRowChangingEvent) Is Nothing) Then
                RaiseEvent PG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESASRowChanging(Me, New PG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESASRowChangeEvent(CType(e.Row,PG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESASRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.PG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESASRowDeletedEvent) Is Nothing) Then
                RaiseEvent PG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESASRowDeleted(Me, New PG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESASRowChangeEvent(CType(e.Row,PG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESASRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.PG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESASRowDeletingEvent) Is Nothing) Then
                RaiseEvent PG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESASRowDeleting(Me, New PG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESASRowChangeEvent(CType(e.Row,PG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESASRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemovePG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESASRow(ByVal row As PG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESASRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As SOLICITUD_DE_SERVICIO_BANCA = New SOLICITUD_DE_SERVICIO_BANCA()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "PG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESASDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class PG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESASRow
        Inherits Global.System.Data.DataRow
        
        Private tablePG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESAS As PG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESASDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablePG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESAS = CType(Me.Table,PG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESASDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IMPORTE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESAS.IMPORTEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IMPORTE' in table 'PG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EM"& _ 
                            "PRESAS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESAS.IMPORTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IMPORTE_CON_LETRA() As String
            Get
                Try 
                    Return CType(Me(Me.tablePG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESAS.IMPORTE_CON_LETRAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IMPORTE_CON_LETRA' in table 'PG_RT_SOLICITUD_DE_SERVICIOS_B"& _ 
                            "ANCA_DE_EMPRESAS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESAS.IMPORTE_CON_LETRAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BANCO_TABLA_AMORTIZACION() As String
            Get
                Try 
                    Return CType(Me(Me.tablePG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESAS.BANCO_TABLA_AMORTIZACIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BANCO_TABLA_AMORTIZACION' in table 'PG_RT_SOLICITUD_DE_SERV"& _ 
                            "ICIOS_BANCA_DE_EMPRESAS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESAS.BANCO_TABLA_AMORTIZACIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property NOMBRE_ORDENANTE() As String
            Get
                Try 
                    Return CType(Me(Me.tablePG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESAS.NOMBRE_ORDENANTEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NOMBRE_ORDENANTE' in table 'PG_RT_SOLICITUD_DE_SERVICIOS_BA"& _ 
                            "NCA_DE_EMPRESAS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESAS.NOMBRE_ORDENANTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CUENTA_CARGO() As String
            Get
                Try 
                    Return CType(Me(Me.tablePG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESAS.CUENTA_CARGOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CUENTA_CARGO' in table 'PG_RT_SOLICITUD_DE_SERVICIOS_BANCA_"& _ 
                            "DE_EMPRESAS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESAS.CUENTA_CARGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property RFC() As String
            Get
                Try 
                    Return CType(Me(Me.tablePG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESAS.RFCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RFC' in table 'PG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRES"& _ 
                            "AS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESAS.RFCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property NOMBRE_BENEFICIARIO() As String
            Get
                Try 
                    Return CType(Me(Me.tablePG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESAS.NOMBRE_BENEFICIARIOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NOMBRE_BENEFICIARIO' in table 'PG_RT_SOLICITUD_DE_SERVICIOS"& _ 
                            "_BANCA_DE_EMPRESAS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESAS.NOMBRE_BENEFICIARIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CUENTA_BENEFICIARIO() As String
            Get
                Try 
                    Return CType(Me(Me.tablePG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESAS.CUENTA_BENEFICIARIOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CUENTA_BENEFICIARIO' in table 'PG_RT_SOLICITUD_DE_SERVICIOS"& _ 
                            "_BANCA_DE_EMPRESAS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESAS.CUENTA_BENEFICIARIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BANCO_BENEFICIARIO() As String
            Get
                Try 
                    Return CType(Me(Me.tablePG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESAS.BANCO_BENEFICIARIOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BANCO_BENEFICIARIO' in table 'PG_RT_SOLICITUD_DE_SERVICIOS_"& _ 
                            "BANCA_DE_EMPRESAS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESAS.BANCO_BENEFICIARIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DIRECCION_BANCO() As String
            Get
                Try 
                    Return CType(Me(Me.tablePG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESAS.DIRECCION_BANCOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DIRECCION_BANCO' in table 'PG_RT_SOLICITUD_DE_SERVICIOS_BAN"& _ 
                            "CA_DE_EMPRESAS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESAS.DIRECCION_BANCOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CIUDAD() As String
            Get
                Try 
                    Return CType(Me(Me.tablePG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESAS.CIUDADColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CIUDAD' in table 'PG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMP"& _ 
                            "RESAS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESAS.CIUDADColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ESTADO() As String
            Get
                Try 
                    Return CType(Me(Me.tablePG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESAS.ESTADOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ESTADO' in table 'PG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMP"& _ 
                            "RESAS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESAS.ESTADOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PAIS() As String
            Get
                Try 
                    Return CType(Me(Me.tablePG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESAS.PAISColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PAIS' in table 'PG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRE"& _ 
                            "SAS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESAS.PAISColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property NOTA_AUTORIZACION() As String
            Get
                Try 
                    Return CType(Me(Me.tablePG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESAS.NOTA_AUTORIZACIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NOTA_AUTORIZACION' in table 'PG_RT_SOLICITUD_DE_SERVICIOS_B"& _ 
                            "ANCA_DE_EMPRESAS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESAS.NOTA_AUTORIZACIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property AUTORIZACION_IZQUIERDA() As String
            Get
                Try 
                    Return CType(Me(Me.tablePG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESAS.AUTORIZACION_IZQUIERDAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AUTORIZACION_IZQUIERDA' in table 'PG_RT_SOLICITUD_DE_SERVIC"& _ 
                            "IOS_BANCA_DE_EMPRESAS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESAS.AUTORIZACION_IZQUIERDAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property AUTORIZADOR_DERECHA() As String
            Get
                Try 
                    Return CType(Me(Me.tablePG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESAS.AUTORIZADOR_DERECHAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AUTORIZADOR_DERECHA' in table 'PG_RT_SOLICITUD_DE_SERVICIOS"& _ 
                            "_BANCA_DE_EMPRESAS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESAS.AUTORIZADOR_DERECHAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property EJECUTIVO_CUENTA() As String
            Get
                Try 
                    Return CType(Me(Me.tablePG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESAS.EJECUTIVO_CUENTAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EJECUTIVO_CUENTA' in table 'PG_RT_SOLICITUD_DE_SERVICIOS_BA"& _ 
                            "NCA_DE_EMPRESAS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESAS.EJECUTIVO_CUENTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BANCO_TABLA_AMORTIZACION1() As String
            Get
                Try 
                    Return CType(Me(Me.tablePG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESAS.BANCO_TABLA_AMORTIZACION1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BANCO_TABLA_AMORTIZACION1' in table 'PG_RT_SOLICITUD_DE_SER"& _ 
                            "VICIOS_BANCA_DE_EMPRESAS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESAS.BANCO_TABLA_AMORTIZACION1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property FECHA() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESAS.FECHAColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FECHA' in table 'PG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPR"& _ 
                            "ESAS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESAS.FECHAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property MONEDA() As String
            Get
                Try 
                    Return CType(Me(Me.tablePG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESAS.MONEDAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MONEDA' in table 'PG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMP"& _ 
                            "RESAS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESAS.MONEDAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsIMPORTENull() As Boolean
            Return Me.IsNull(Me.tablePG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESAS.IMPORTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetIMPORTENull()
            Me(Me.tablePG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESAS.IMPORTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsIMPORTE_CON_LETRANull() As Boolean
            Return Me.IsNull(Me.tablePG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESAS.IMPORTE_CON_LETRAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetIMPORTE_CON_LETRANull()
            Me(Me.tablePG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESAS.IMPORTE_CON_LETRAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBANCO_TABLA_AMORTIZACIONNull() As Boolean
            Return Me.IsNull(Me.tablePG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESAS.BANCO_TABLA_AMORTIZACIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBANCO_TABLA_AMORTIZACIONNull()
            Me(Me.tablePG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESAS.BANCO_TABLA_AMORTIZACIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsNOMBRE_ORDENANTENull() As Boolean
            Return Me.IsNull(Me.tablePG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESAS.NOMBRE_ORDENANTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetNOMBRE_ORDENANTENull()
            Me(Me.tablePG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESAS.NOMBRE_ORDENANTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCUENTA_CARGONull() As Boolean
            Return Me.IsNull(Me.tablePG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESAS.CUENTA_CARGOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCUENTA_CARGONull()
            Me(Me.tablePG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESAS.CUENTA_CARGOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsRFCNull() As Boolean
            Return Me.IsNull(Me.tablePG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESAS.RFCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetRFCNull()
            Me(Me.tablePG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESAS.RFCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsNOMBRE_BENEFICIARIONull() As Boolean
            Return Me.IsNull(Me.tablePG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESAS.NOMBRE_BENEFICIARIOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetNOMBRE_BENEFICIARIONull()
            Me(Me.tablePG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESAS.NOMBRE_BENEFICIARIOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCUENTA_BENEFICIARIONull() As Boolean
            Return Me.IsNull(Me.tablePG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESAS.CUENTA_BENEFICIARIOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCUENTA_BENEFICIARIONull()
            Me(Me.tablePG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESAS.CUENTA_BENEFICIARIOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBANCO_BENEFICIARIONull() As Boolean
            Return Me.IsNull(Me.tablePG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESAS.BANCO_BENEFICIARIOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBANCO_BENEFICIARIONull()
            Me(Me.tablePG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESAS.BANCO_BENEFICIARIOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDIRECCION_BANCONull() As Boolean
            Return Me.IsNull(Me.tablePG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESAS.DIRECCION_BANCOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDIRECCION_BANCONull()
            Me(Me.tablePG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESAS.DIRECCION_BANCOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCIUDADNull() As Boolean
            Return Me.IsNull(Me.tablePG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESAS.CIUDADColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCIUDADNull()
            Me(Me.tablePG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESAS.CIUDADColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsESTADONull() As Boolean
            Return Me.IsNull(Me.tablePG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESAS.ESTADOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetESTADONull()
            Me(Me.tablePG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESAS.ESTADOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPAISNull() As Boolean
            Return Me.IsNull(Me.tablePG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESAS.PAISColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPAISNull()
            Me(Me.tablePG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESAS.PAISColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsNOTA_AUTORIZACIONNull() As Boolean
            Return Me.IsNull(Me.tablePG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESAS.NOTA_AUTORIZACIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetNOTA_AUTORIZACIONNull()
            Me(Me.tablePG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESAS.NOTA_AUTORIZACIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsAUTORIZACION_IZQUIERDANull() As Boolean
            Return Me.IsNull(Me.tablePG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESAS.AUTORIZACION_IZQUIERDAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetAUTORIZACION_IZQUIERDANull()
            Me(Me.tablePG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESAS.AUTORIZACION_IZQUIERDAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsAUTORIZADOR_DERECHANull() As Boolean
            Return Me.IsNull(Me.tablePG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESAS.AUTORIZADOR_DERECHAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetAUTORIZADOR_DERECHANull()
            Me(Me.tablePG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESAS.AUTORIZADOR_DERECHAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsEJECUTIVO_CUENTANull() As Boolean
            Return Me.IsNull(Me.tablePG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESAS.EJECUTIVO_CUENTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetEJECUTIVO_CUENTANull()
            Me(Me.tablePG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESAS.EJECUTIVO_CUENTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBANCO_TABLA_AMORTIZACION1Null() As Boolean
            Return Me.IsNull(Me.tablePG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESAS.BANCO_TABLA_AMORTIZACION1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBANCO_TABLA_AMORTIZACION1Null()
            Me(Me.tablePG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESAS.BANCO_TABLA_AMORTIZACION1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsFECHANull() As Boolean
            Return Me.IsNull(Me.tablePG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESAS.FECHAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetFECHANull()
            Me(Me.tablePG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESAS.FECHAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMONEDANull() As Boolean
            Return Me.IsNull(Me.tablePG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESAS.MONEDAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMONEDANull()
            Me(Me.tablePG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESAS.MONEDAColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class PG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESASRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As PG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESASRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As PG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESASRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As PG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESASRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace SOLICITUD_DE_SERVICIO_BANCATableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class PG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESASTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "PG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESAS"
            tableMapping.ColumnMappings.Add("IMPORTE", "IMPORTE")
            tableMapping.ColumnMappings.Add("IMPORTE_CON_LETRA", "IMPORTE_CON_LETRA")
            tableMapping.ColumnMappings.Add("BANCO_TABLA_AMORTIZACION", "BANCO_TABLA_AMORTIZACION")
            tableMapping.ColumnMappings.Add("NOMBRE_ORDENANTE", "NOMBRE_ORDENANTE")
            tableMapping.ColumnMappings.Add("CUENTA_CARGO", "CUENTA_CARGO")
            tableMapping.ColumnMappings.Add("RFC", "RFC")
            tableMapping.ColumnMappings.Add("NOMBRE_BENEFICIARIO", "NOMBRE_BENEFICIARIO")
            tableMapping.ColumnMappings.Add("CUENTA_BENEFICIARIO", "CUENTA_BENEFICIARIO")
            tableMapping.ColumnMappings.Add("BANCO_BENEFICIARIO", "BANCO_BENEFICIARIO")
            tableMapping.ColumnMappings.Add("DIRECCION_BANCO", "DIRECCION_BANCO")
            tableMapping.ColumnMappings.Add("CIUDAD", "CIUDAD")
            tableMapping.ColumnMappings.Add("ESTADO", "ESTADO")
            tableMapping.ColumnMappings.Add("PAIS", "PAIS")
            tableMapping.ColumnMappings.Add("NOTA_AUTORIZACION", "NOTA_AUTORIZACION")
            tableMapping.ColumnMappings.Add("AUTORIZACION_IZQUIERDA", "AUTORIZACION_IZQUIERDA")
            tableMapping.ColumnMappings.Add("AUTORIZADOR_DERECHA", "AUTORIZADOR_DERECHA")
            tableMapping.ColumnMappings.Add("EJECUTIVO_CUENTA", "EJECUTIVO_CUENTA")
            tableMapping.ColumnMappings.Add("BANCO_TABLA_AMORTIZACION1", "BANCO_TABLA_AMORTIZACION1")
            tableMapping.ColumnMappings.Add("FECHA", "FECHA")
            tableMapping.ColumnMappings.Add("MONEDA", "MONEDA")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.PYF18_Finanzas.My.MySettings.Default.PYF18_Finanzas_V0038_R0ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.PG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESAS"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PP_L_DEBUG", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PP_K_SISTEMA_EXE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PP_K_USUARIO_ACCION", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PP_K_TABLA_AMORTIZACION", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As SOLICITUD_DE_SERVICIO_BANCA.PG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESASDataTable, ByVal PP_L_DEBUG As Global.System.Nullable(Of Integer), ByVal PP_K_SISTEMA_EXE As Global.System.Nullable(Of Integer), ByVal PP_K_USUARIO_ACCION As Global.System.Nullable(Of Integer), ByVal PP_K_TABLA_AMORTIZACION As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (PP_L_DEBUG.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(PP_L_DEBUG.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (PP_K_SISTEMA_EXE.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(PP_K_SISTEMA_EXE.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (PP_K_USUARIO_ACCION.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(PP_K_USUARIO_ACCION.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (PP_K_TABLA_AMORTIZACION.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(PP_K_TABLA_AMORTIZACION.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal PP_L_DEBUG As Global.System.Nullable(Of Integer), ByVal PP_K_SISTEMA_EXE As Global.System.Nullable(Of Integer), ByVal PP_K_USUARIO_ACCION As Global.System.Nullable(Of Integer), ByVal PP_K_TABLA_AMORTIZACION As Global.System.Nullable(Of Integer)) As SOLICITUD_DE_SERVICIO_BANCA.PG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESASDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (PP_L_DEBUG.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(PP_L_DEBUG.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (PP_K_SISTEMA_EXE.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(PP_K_SISTEMA_EXE.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (PP_K_USUARIO_ACCION.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(PP_K_USUARIO_ACCION.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (PP_K_TABLA_AMORTIZACION.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(PP_K_TABLA_AMORTIZACION.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As SOLICITUD_DE_SERVICIO_BANCA.PG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESASDataTable = New SOLICITUD_DE_SERVICIO_BANCA.PG_RT_SOLICITUD_DE_SERVICIOS_BANCA_DE_EMPRESASDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As SOLICITUD_DE_SERVICIO_BANCA, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Function UpdateInsertedRows(ByVal dataSet As SOLICITUD_DE_SERVICIO_BANCA, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Function UpdateDeletedRows(ByVal dataSet As SOLICITUD_DE_SERVICIO_BANCA, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overridable Function UpdateAll(ByVal dataSet As SOLICITUD_DE_SERVICIO_BANCA) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana"& _ 
                        "ger TableAdapter property to a valid TableAdapter instance.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("The transaction cannot begin. The current data connection does not support transa"& _ 
                        "ctions or the current state is not allowing the transaction to begin.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing)  _
                            AndAlso (traversedRows.ContainsKey(parent) = false))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing)  _
                                AndAlso (traversedRows.ContainsKey(parent) = false))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing)  _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
